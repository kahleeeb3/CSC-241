AARCH64 GAS  add.asm 			page 1


   1              	/*
   2              	Performs the 128-bit addition of two numbers, which are originally to be stored in X1-X2 and X3-X4.
   3              	Prints the two original numbers (as pairs of 64 bit numbers in hex), and the sum.  You can ignore t
   4              	
   5              	Example computation: The registers would start as
   6              	X1: 0x0000 0000 0000 0000
   7              	X2: 0xFFFF FFFF FFFF FFFF
   8              	X3: 0x0000 0000 0000 0000
   9              	X4: 0x0000 0000 0000 0001
  10              	Then, the sum would be 0x0000 0000 0000 0001 0000 0000 0000 0000.
  11              	*/
  12              	
  13              	.data
  14              	
  15 0000 54686520 	str1: .asciz "The number 0x%lx\n"
  15      6E756D62 
  15      65722030 
  15      78256C78 
  15      0A00
  16 0012 54686520 	str2: .asciz "The number loaded using MOVN is %i\n"
  16      6E756D62 
  16      6572206C 
  16      6F616465 
  16      64207573 
  17              	
  18              	.text
  19              	
  20              	.global main
  21              	
  22              	main:
  23              	
  24 0000 FD7BBFA9 	    stp x29,x30,[sp,#-16]! // Store Pair // Leave bread crumb
  25              	
  26 0004 E1DD97D2 	    movz x1, #0xBEEF
  27 0008 A1D5BBF2 	    movk x1, #0xDEAD, lsl #16
  28 000c C15BD9F2 	    movk x1, #0xCADE, lsl #32
  29 0010 A1DDFFF2 	    movk x1, #0xFEED, lsl #48
  30 0014 20010058 	    ldr x0,= str1 // address of format string is x0
  31 0018 00000094 	    bl printf // Print the format string
  32              	
  33 001c E1E48012 	    movn w1, #1831
  34 0020 00010058 	    ldr x0,= str2 // address of format string is x0
  35 0024 00000094 	    bl printf // Print the format string
  36              	
  37              	    // This should be at the end of every file
  38 0028 FD7BC1A8 	    ldp x29,x30,[sp],16 // Pick up bread crumb
  39 002c 00008052 	    mov w0,#0 //Moving zero into register w0
  40 0030 C0035FD6 	    ret
  40      00000000 
  40      00000000 
  40      00000000 
  40      00000000 
AARCH64 GAS  add.asm 			page 2


DEFINED SYMBOLS
             add.asm:15     .data:0000000000000000 str1
             add.asm:16     .data:0000000000000012 str2
             add.asm:22     .text:0000000000000000 main
             add.asm:24     .text:0000000000000000 $x
             add.asm:40     .text:0000000000000038 $d

UNDEFINED SYMBOLS
printf
